name: test

on:
  push:
    branches:
    - master
    - 'release/**'
  pull_request:

jobs:
  basic:
    name: "Lints & Unit tests"
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.49.0
        args: --verbose
    - name: Run yamllint
      run: yamllint .
    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    - name: Run shellcheck
      run: find . -name '*.sh' | xargs shellcheck
    - name: Install shfmt
      run: go install mvdan.cc/sh/v3/cmd/shfmt@v3.4.3
    - name: Run shfmt
      run: find . -name '*.sh' | xargs shfmt -s -d
    - name: Check hyperlinks
      uses: docker://dkhamsing/awesome_bot:latest
      with:
        args: /github/workspace/README.md --allow-dupe --allow-redirect --request-delay 1 --white-list https://img.shields.io,http://127.0.0.1:8080,https://github.com/lima-vm/lima/releases/download,https://xbarapp.com
    - name: Unit tests
      run: go test -v ./...
    - name: Make
      run: make
    - name: Install
      run: sudo make install
    - name: Validate examples (except vmnet.yaml)
      run: find examples -name '*.yaml' | grep -v 'vmnet.yaml' | xargs limactl validate
    - name: Uninstall
      run: sudo make uninstall

  cross-windows:
    name: "Windows tests (cross)"
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Install wine
      run: |
        sudo apt-get update
        sudo apt-get install -y wine-binfmt wine64
        sudo apt-get remove -y mono-runtime || true
    - name: Unit tests
      run: GOOS=windows GOARCH=amd64 go test -v ./...
    - name: Make
      run: make GOOS=windows GOARCH=amd64

  integration:
    name: Integration tests
    runs-on: macos-12
    timeout-minutes: 120
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Test making darwin artifacts
      run: make artifacts-darwin
    - name: Unit tests
      run: go test -v ./...
    - name: Make
      run: make
    - name: Install
      run: make install
    - name: Install test dependencies
      # QEMU:      required by Lima itself
      # bash:      required by test-example.sh (OS version of bash is too old)
      # coreutils: required by test-example.sh for the "timeout" command
      # curl:      required by test-example.sh to download nerdctl for alpine
      # jq:        required by test-example.sh to determine download URL for nerdctl
      run: |
        set -x
        # Github runners seem to symlink to python2.7 version of 2to3,
        # breaking upgrades to latest python@3.9
        rm -f /usr/local/bin/2to3
        time brew update
        time brew install qemu bash coreutils curl jq
        time brew upgrade
    - name: Cache ~/Library/Caches/lima/download
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/lima/download
        key: ${{ runner.os }}-integration
    - name: "Test default.yaml"
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-example.sh examples/default.yaml
    - name: "Test alpine.yaml"
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-example.sh examples/alpine.yaml
    - name: "Test experimental/9p.yaml"
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-example.sh examples/experimental/9p.yaml
    # GHA macOS is slow and flaky, so we only test a few YAMLS here.
    # Other yamls are tested on Linux instances of Cirrus.

  vmnet:
    name: "VMNet test"
    runs-on: macos-11
    timeout-minutes: 120
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Make
      run: make
    - name: Install
      run: make install
    - name: Install test dependencies
      run: brew install qemu bash coreutils iperf3
    - name: Cache ~/Library/Caches/lima/download
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/lima/download
        key: ${{ runner.os }}-vmnet
    - name: Install vde_switch and vde_vmnet (Deprecated)
      env:
        VDE_VMNET_VERSION: v0.6.0
      run: |
        (
          brew install autoconf automake
          cd ~
          git clone https://github.com/lima-vm/vde_vmnet
          cd vde_vmnet
          git checkout $VDE_VMNET_VERSION
          sudo git config --global --add safe.directory /Users/runner/vde_vmnet
          sudo make PREFIX=/opt/vde install
        )
        limactl sudoers | sudo tee /etc/sudoers.d/lima
    - name: Unit test (pkg/networks) with vde_vmnet (Deprecated)
      # Set -count=1 to disable cache
      run: go test -v -count=1 ./pkg/networks/...
    - name: Test vde_vmnet (Deprecated)
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-example.sh examples/vmnet.yaml
    - name: Install socket_vmnet
      env:
        SOCKET_VMNET_VERSION: v1.0.0-alpha.0
      run: |
        (
          cd ~
          git clone https://github.com/lima-vm/socket_vmnet
          cd socket_vmnet
          git checkout $SOCKET_VMNET_VERSION
          sudo git config --global --add safe.directory /Users/runner/socket_vmnet
          sudo make PREFIX=/opt/socket_vmnet install
        )
        limactl sudoers | sudo tee /etc/sudoers.d/lima
    - name: Unit test (pkg/networks) with socket_vmnet
      # Set -count=1 to disable cache
      run: go test -v -count=1 ./pkg/networks/...
    - name: Test socket_vmnet
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-example.sh examples/vmnet.yaml

  upgrade:
    name: "Upgrade test"
    runs-on: macos-12
    timeout-minutes: 120
    strategy:
      matrix:
        oldver: ["v0.10.0"]
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install test dependencies
      run: brew install qemu bash coreutils
    - name: Cache ~/Library/Caches/lima/download
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/lima/download
        key: ${{ runner.os }}-upgrade-${{ matrix.oldver }}
    - name: Test
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 30
        retry_on: error
        max_attempts: 3
        command: ./hack/test-upgrade.sh ${{ matrix.oldver }} ${{ github.sha }}

  artifacts-linux:
    name: Artifacts Linux
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - name: Install gcc-aarch64-linux-gnu
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Make linux artifacts
      run: make artifacts-linux
    - name: Make misc artifacts
      run: make artifacts-misc
